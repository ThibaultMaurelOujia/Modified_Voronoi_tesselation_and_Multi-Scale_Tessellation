cmake_minimum_required(VERSION 3.1)
project(ParallelDelaunay)


set(CMAKE_C_COMPILER /trinity/shared/apps/custom/x86_64/gcc-11.2.0/bin/gcc)
set(CMAKE_CXX_COMPILER /trinity/shared/apps/custom/x86_64/gcc-11.2.0/bin/g++)


set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
message(STATUS "Using GCC version: ${CMAKE_CXX_COMPILER_VERSION}")



set(CGAL_DIR "/scratch/toujia/Parallele_Tessellation/CGAL/lib64/cmake/CGAL")
list(APPEND CMAKE_PREFIX_PATH "/scratch/toujia/Parallele_Tessellation/boost")
include_directories("/scratch/toujia/Parallele_Tessellation/boost/include")
link_directories("/scratch/toujia/Parallele_Tessellation/boost/lib")


set(Qhull_DIR "/scratch/toujia/Parallele_Tessellation/Qhull/lib/cmake/Qhull")


# Recherche des packages nécessaires (CGAL, TBB, MPI, GMP, Qhull, OpenMP)
find_package(CGAL REQUIRED)
find_package(TBB REQUIRED)
include(CGAL_TBB_support) # Includes a module from CGAL

find_package(MPI REQUIRED)
add_definitions(${MPI_CXX_COMPILE_FLAGS})
include_directories(${MPI_CXX_INCLUDE_PATH})

find_package(GMP REQUIRED)
include_directories(${GMP_INCLUDE_DIRS})
link_directories(${GMP_LIBRARY_DIRS})

find_package(Qhull CONFIG REQUIRED)

find_package(OpenMP)

# Ajout des bibliothèques et des include directories au projet
include_directories(${CGAL_INCLUDE_DIRS} ${TBB_INCLUDE_DIRS})
link_directories(${CGAL_LIBRARY_DIRS} ${TBB_LIBRARY_DIRS})


# Ajouter un message pour vérifier si OpenMP est trouvé
if(OpenMP_omp_FOUND OR OpenMP_CXX_FOUND)
    message(STATUS "OpenMP found")
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
else()
    message(WARNING "OpenMP not found")
endif()

# Création de l'exécutable avec le fichier source
add_executable(parallel_delaunay_multiscale main.cpp parallel_delaunay.cpp utile.cpp print_data.cpp modified_voronoi.cpp multiscale_tessellation.cpp test_function.cpp)

# Then on all target using TBB, link with CGAL::TBB_support
# Liaison des bibliothèques nécessaires à l'exécutable
target_link_libraries(parallel_delaunay_multiscale PRIVATE CGAL::TBB_support ${GMP_LIBRARIES} Qhull::qhullcpp Qhull::qhull_r ${MPI_CXX_LIBRARIES} ${MPI_CXX_LINK_FLAGS} OpenMP::OpenMP_CXX)
